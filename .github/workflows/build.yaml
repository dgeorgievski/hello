name: build
on:
  push:
    branches:
      - '*'
  create:
  workflow_dispatch:

defaults:
  run:
    shell: nu {0}
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Clone repo
      uses: actions/checkout@v2  
      with:
        fetch-depth: '0'
    - uses: hustcer/setup-nu@main
      with:
        version: "0.104.0"
        features: default
        enable-plugins: true
    - name: Get NuShell Env 
      run: |
        version; 

        print $'Current env:'
        print $env
    - name: Check Conventional Commit
      run: |
        cd ${{ github.workspace }};
        ls -l;
        # use ./scripts/agit
        
        # let subject = git show -s --format="%s"

        # let is_conv = agit core is_conventional
        # if $is_conv == true {
        #   print "commit is conventional"
        # }else{
        #   print "commit is not conventional"
        # }
        # print $"subject> ($subject)"

    - name: Set version
      shell: bash
      run: |
        #!/usr/bin/env bash
        
        ## efs/heads/[feature]/my-branch
        current_branch=${GITHUB_REF##*/}
        GIT_SHORT_COMMIT="$(git rev-list --abbrev-commit -1 HEAD)"
        echo "CUR_BRANCH: $current_branch"
        cur_date=$(date +%Y%m%d)
        echo "cur date: ${cur_date}"
        echo "run id: ${GITHUB_RUN_ID}"
        echo "short commit: ${GIT_SHORT_COMMIT}"

        APP_VERSION="$(grep 'var VERSION' pkg/version/version.go | awk '{ print $4 }' | tr -d '"')"
        APP_DEV_VERSION="${current_branch}-${cur_date}.${GITHUB_RUN_ID}"
        
        UNIX_DATE="$(date +%s%M)"

        echo "APP_VERSION=${APP_VERSION}" >> "$GITHUB_ENV"
        echo "APP_DEV_VERSION=${APP_DEV_VERSION}" >> "$GITHUB_ENV"
        echo "CUR_BRANCH=${current_branch}" >> "$GITHUB_ENV"
        echo "GIT_SHORT_COMMIT=${GIT_SHORT_COMMIT}" >> "$GITHUB_ENV"
        echo "UNIX_DATE=${UNIX_DATE}" >> "$GITHUB_ENV"

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '^1.24'

    - name: Display Go version
      run: go version
    - name: Install dependencies
      run: |
        go mod download
    - name: Build hello app
      shell: bash
      run: |
        #!/usr/bin/env bash
        NEW_APP_VERSION="$APP_VERSION"
        if [[ $CUR_BRANCH != "main" ]]; then
          echo "Working on a dev branch"
          NEW_APP_VERSION="$APP_DEV_VERSION"
        fi
        echo "NEW_APP_VERSION: $NEW_APP_VERSION"

        go build \
          -ldflags "-s -w  \
            -X github.com/${GITHUB_REPOSITORY}/pkg/version.VERSION=${NEW_APP_VERSION} \
            -X github.com/${GITHUB_REPOSITORY}/pkg/version.COMMIT=${GIT_SHORT_COMMIT} \
            -X github.com/${GITHUB_REPOSITORY}/pkg/version.DATE=${UNIX_DATE}" \
          -o ./bin/hello

          ./bin/hello version  

    ## No need to push tag from a workflow
    # - name: push tags from main
    #   if: github.ref_name == 'main'
    #   env: 
    #     GH_TOKEN: ${{ secrets.HELLO_TOKEN }}
    #   run: |
    #     git config user.name "GitHub Actions"
    #     git config user.email "github-actions@users.noreply.github.com"
    #     git remote set-url origin https://${GH_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
        
    #     NEW_TAG="v${APP_VERSION}"
    #     git tag $NEW_TAG  #v0.0.16
    #     git push origin $NEW_TAG

    # - name: Invoke release for a tag
    #   if: github.ref_name == 'main'
    #   uses: benc-uk/workflow-dispatch@v1
    #   with:
    #     workflow: release.yaml
    #     token: ${{ secrets.HELLO_TOKEN }}

      