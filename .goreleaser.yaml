# yaml-language-server: $schema=https://goreleaser.com/static/schema-pro.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2
project_name: dgeorgievski-hello
before:
  hooks:
    - go mod tidy

builds:
  - binary: hello
    id: hello
    main: ./main.go
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: darwin
        goarch: "386"
      - goos: linux
        goarch: arm
        goarm: 7
    
    flags:
      - -trimpath
      - -buildvcs=false
    # Default: '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser'.
    # Templates: allowed.
    ldflags:
      - -extldflags '-static'
      - -s -w 
      - -X github.com/altimetrik-digital-enablement-demo-hub/dgeorgievski-hello/pkg/version.VERSION={{.Version}}
      - -X github.com/altimetrik-digital-enablement-demo-hub/dgeorgievski-hello/pkg/version.COMMIT={{.ShortCommit}}
      - -X github.com/altimetrik-digital-enablement-demo-hub/dgeorgievski-hello/pkg/version.DATE={{.Date}}
archives:
  - formats: [ 'tar.gz' ]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    files:
      # - LICENSE
      - README.md

changelog:
  sort: asc
  use: github
  format: "{{ .SHA }}: {{ .Message }}{{ with .AuthorUsername }} (@{{ . }}){{ end }}"
  filters:
    exclude:
      - "^test:"
      - "^test\\("
      - "^chore: update$"
      - "^chore: docs$"
      - "^docs: update$"
      - "^chore: typo$"
      - "^chore: auto-update generated files$"
      - "^chore\\(deps\\): "
      - "^(build|ci): "
      - "merge conflict"
      - "merge conflict"
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
      - go mod tidy
  groups:
    - title: "New Features"
      regexp: '^.*?feat(\(.+\))??!?:.+$'
      order: 100
    - title: "Security updates"
      regexp: '^.*?sec(\(.+\))??!?:.+$'
      order: 150
    - title: "Bug fixes"
      regexp: '^.*?(fix|refactor)(\(.+\))??!?:.+$'
      order: 200
    - title: "Documentation updates"
      regexp: ^.*?docs?(\(.+\))??!?:.+$
      order: 400
    - title: "CI Workflows"
      regexp: ^.*?ci?(\(.+\))??!?:.+$
      order: 500
    - title: Other work
      order: 9999

release:
  footer: >-

    ---

    GitHub: https://github.com/dgeorgievski/hello
